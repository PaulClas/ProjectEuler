/*
File: main.cpp
Date: 4 avril 2019
Author: Paul Clas
Description:
Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/

#include<iostream>

using namespace std;
bool isEven(int n);
//int fibonaciGenerator(int n);
int Fibonacci(int x);
int fibonacciWithBorder(int upperBorder);
int sumEvenFibonacci(int upperBorder);
int counter = 1;

//Recursive function

int Fibonacci(int x)
{
	if (x < 2) {
		return x;
	}
	return (Fibonacci(x - 1) + Fibonacci(x - 2));
}

//Using recursive function to calculate sum of even numbers;
int sumEvenFibonacci(int upperBorder) {
	int i = 0;
	int f;
	int sum = 0;
	cout << "The Fibonacci sequence up to " << upperBorder << " is : ";
	while (Fibonacci(i) < upperBorder) {
		cout << " " << Fibonacci(i);
		if (isEven(Fibonacci(i))) {
			sum += Fibonacci(i);
		}
		i++;
	}
	cout << endl;
	return sum;
}



//Generates the n first number of the fibonacci sequence.
/*
int fibonaciGenerator(int n){
	int m =1;
	int l=1;
	int h=1;
	for (int i = 1; i < (n+1); i++) {
		if (i == 1) {
			l = l + m;
			return l;
		}
		else {
			h = l;
			l = l + m;
			return l;
		}
		m = h;
	}
}
*/
bool isEven(int n) {
	if (n % 2 == 0) {
		return true;
	}
	else return false;
}


int fibonacciWithBorder(int upperBorder){
	int m = 1;
	int l = 1;
	int h = 1;
	int i = 1;
	int sum = 0;
	cout << "The Fibonacci sequence up to " << upperBorder << " is : 0 1 1";
	bool condition;
	while (l < upperBorder){
		if (i == 1) {
			l = l + m;
			sum+= l;
			cout << " "<< l;
		}
		else {
			h = l;
			l = l + m;
			if (l < upperBorder) {
				cout << " " << l;
				condition = isEven(l);
				if (condition)
					sum += l;
			}
		}
		m = h;
		i++;
	}
	cout << endl;
	return sum;

}

int main() {

	int upperBorder;
	cout << "Considering the terms of the Fiboannci sequence. Enter the value not to exceed" << endl;
	cin >> upperBorder;
	cout << "Using iteration: " << endl;
	cout << "Sum of even numbers of Fibonacci is "<< fibonacciWithBorder(upperBorder) << endl;
	cout << "Using Recursion: " << endl;
	cout << "Sum of even numbers of Fibonacci is " << sumEvenFibonacci(upperBorder) << endl;
	
	
	system("pause");
	return 0;
}